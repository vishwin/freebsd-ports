--- CMakeLists.txt.orig	2023-03-07 11:14:26 UTC
+++ CMakeLists.txt
@@ -59,7 +59,7 @@ if (NOT MSVC)
     find_package (PkgConfig REQUIRED)
     pkg_search_module (GnuTLS REQUIRED IMPORTED_TARGET gnutls)
     pkg_search_module (Nettle REQUIRED IMPORTED_TARGET nettle)
-    find_package (msgpack REQUIRED NAMES msgpackc-cxx msgpack msgpack-cxx)
+    find_package (msgpackc-cxx REQUIRED NAMES msgpackc-cxx msgpack msgpack-cxx)
     if (OPENDHT_TOOLS)
         find_package (Readline 6 REQUIRED)
     endif ()
@@ -91,8 +91,8 @@ if (NOT MSVC)
         endif()
         if (OPENDHT_PROXY_OPENSSL)
             # https://cmake.org/cmake/help/latest/module/FindOpenSSL.html
-            pkg_search_module(OPENSSL REQUIRED IMPORTED_TARGET openssl)
-            if (OPENSSL_FOUND)
+            #pkg_search_module(OPENSSL REQUIRED IMPORTED_TARGET openssl)
+            if (TRUE OR OPENSSL_FOUND)
                 message(STATUS "Found OpenSSL ${OPENSSL_VERSION} ${OPENSSL_INCLUDE_DIRS}")
                 set(openssl_lib ", openssl")
             else ()
@@ -309,7 +309,7 @@ if (OPENDHT_STATIC)
             target_link_libraries(opendht-static PUBLIC PkgConfig::Jsoncpp)
         endif()
         if (OPENDHT_PROXY_OPENSSL)
-            target_link_libraries(opendht-static PUBLIC PkgConfig::OPENSSL)
+            target_link_libraries(opendht-static ssl)
         endif()
         if (APPLE)
             target_link_libraries(opendht-static PRIVATE SYSTEM "-framework CoreFoundation" "-framework Security")
@@ -381,7 +381,7 @@ if (OPENDHT_SHARED)
         target_link_libraries(opendht PUBLIC PkgConfig::Jsoncpp)
     endif()
     if (OPENDHT_PROXY_OPENSSL)
-        target_link_libraries(opendht PUBLIC PkgConfig::OPENSSL)
+        target_link_libraries(opendht PUBLIC ssl)
     endif()    
     if (APPLE)
         target_link_libraries(opendht PRIVATE SYSTEM "-framework CoreFoundation" "-framework Security")
@@ -498,7 +498,7 @@ if (OPENDHT_TESTS)
        ${GNUTLS_LIBRARIES}
     )
     if (OPENDHT_PROXY_OPENSSL)
-        target_link_libraries(opendht_unit_tests PkgConfig::OPENSSL)
+        target_link_libraries(opendht_unit_tests ssl)
     endif()
     enable_testing()
     add_test(TEST opendht_unit_tests)
