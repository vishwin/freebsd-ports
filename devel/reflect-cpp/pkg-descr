reflect-cpp is a C++-20 library for fast serialization, deserialization and
validation using reflection, similar to pydantic in Python, serde in Rust,
encoding in Go or aeson in Haskell.

reflect-cpp fills an important gap in C++ development. It minimizes boilerplate
code and enhances code safety for seamless and efficient data exchange across
system components.

Design principles for reflect-cpp include:

- Close integration with containers from the C++ standard library
- Close adherence to C++ idioms
- Out-of-the-box support for JSON
- Simple installation
- Simple extendability to other serialization formats
- Simple extendability to custom classes
- Being one of the fastest serialization libraries in existence, as demonstrated
  by our benchmarks

reflect-cpp is not just a reflection library, it is for serialization,
deserialization and validation through reflection.

That means that you can encode your requirements about the input data in the
type system and have them validated upfront. This is why the library also
includes algebraic data types like tagged unions and numerous validation
routines. Having your requirements encoded in the type system is the most
reliable way of ensuring they are met. If your requirements are not met, the
user of your software gets a very clear error message. Encoding your
requirements in the type system also makes it a lot easier for anyone reading
your code.

This increases user experience and developer experience, it makes your code
safer (fewer bugs) and more secure (less prone to malicious attacks).
