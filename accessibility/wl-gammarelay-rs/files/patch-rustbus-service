https://github.com/MaxVerevkin/wl-gammarelay-rs/issues/22
https://github.com/MaxVerevkin/rustbus-service/commit/681b783ff093

--- ../rustbus-service-7401913977ccf665748b1f4dee033921e1c86afd/src/lib.rs.orig	2024-03-17 08:14:31 UTC
+++ ../rustbus-service-7401913977ccf665748b1f4dee033921e1c86afd/src/lib.rs
@@ -114,7 +114,14 @@ impl<D: 'static> Service<D> {
                 MessageType::Signal => {
                     eprintln!("todo: handle signal: {:?}", msg.dynheader.member);
                 }
-                MessageType::Error => todo!(),
+                MessageType::Error => {
+                    let error_name = msg.dynheader.error_name.expect("error without error_name");
+                    let error_message = msg.body.parser().get::<&str>().ok();
+                    eprintln!(
+                        "dbus error: {error_name}: {}",
+                        error_message.unwrap_or("<no message>")
+                    );
+                }
                 MessageType::Call => {
                     if let Some(cb) = get_call_handler(&self.root, &msg) {
                         cb(MethodContext {
